name: opentelemetry-demo-checkoutservice
replicaCount: 1
revisionHistoryLimit: 10

instance: opentelemetry-demo
part-of: opentelemetry-demo
component: checkoutservice

serviceAccount:
  name: opentelemetry-demo

image :
  repository: ghcr.io/open-telemetry/demo
  tag: "1.12.0-checkoutservice"
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port: 8080
  name: tcp-service
  targetPort: 8080

ports:
  containerPort: 8080
  name: service

resources:
  limits:
    memory: 20Mi

env:
  FLAG_HOST: opentelemetry-demo-flagd
  FLAG_PORT: 8013
  OTEL_SERVICE_NAME: checkoutservice
  OTEL_COLLECTOR_NAME: opentelemetry-demo-otelcol
  CHECKOUT_SERVICE_PORT: 8080
  CART_SERVICE_ADDR: opentelemetry-demo-cartservice:8080
  CART_SERVICE_ADDR: opentelemetry-demo-currencyservice:8080
  EMAIL_SERVICE_ADDR: http://opentelemetry-demo-emailservice:8080
  PAYMENT_SERVICE_ADDR: opentelemetry-demo-paymentservice:8080
  PRODUCT_CATALOG_SERVICE_ADDR: opentelemetry-demo-productcatalogservice:8080
  SHIPPING_SERVICE_ADDR: opentelemetry-demo-shippingservice:8080
  KAFKA_SERVICE_ADDR: opentelemetry-demo-kafka:9092
  ASPNETCORE_URLS: http://*:$(CART_SERVICE_PORT)
  VALKEY_ADDR: 'opentelemetry-demo-valkey:6379'
  OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: cumulative
  OTEL_EXPORTER_OTLP_ENDPOINT: http://$OTEL_COLLECTOR_NAME:4317
  OTEL_RESOURCE_ATTRIBUTES: service.name=$(OTEL_SERVICE_NAME),service.namespace=opentelemetry-demo,service.version=1.12.0

initContainers:
    command: 
      - "sh"
      - "-c"
      - "until nc -z -v -w30 opentelemetry-demo-kafka 9092; do echo waiting for valkey; sleep 2; done;"
    image:
      repository: busybox
      tag: latest
    name: wait-for-kafka