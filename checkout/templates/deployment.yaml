apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    {{- include "opentelemetry-demo-checkoutservice.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "opentelemetry-demo-checkoutservice.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "opentelemetry-demo-checkoutservice.selectorLabels" . | nindent 8}}
    spec:
      serviceAccount: {{ .Values.serviceAccount.name }}
      containers:
        - name: {{ .Values.component }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.ports.containerPort }}
              name: {{ .Values.ports.name }}
          env:
           {{- range $key, $value := .Values.env }}
           - name: {{ $key }}
             value: {{ $value | quote }}
           {{- end }}
          resources:
            limits:
              memory: {{ .Values.resources.limits.memory }}
          volumeMounts:
      initContainers:
        - command:
            - "sh"
            - "-c"
            - until nc -z -v -w30 opentelemetry-demo-kafka 9092; do echo waiting
              for kafka; sleep 2; done;
          image: "{{ .Values.initContainers.image.repository }}:{{ .Values.initContainers.image.tag }}"
          name: {{ .Values.initContainers.name }}
      volumes: